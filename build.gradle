apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'
/*task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version,
                   'Main-Class': 'com.aws.sts.outh.AWSFrame'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
*/


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    compile 'com.amazonaws:aws-java-sdk-iam:+'
    compile 'com.amazonaws:aws-java-sdk-sts:+'
    compile 'com.amazonaws:aws-java-sdk-ec2:+'
    compile 'com.okta:okta-sdk:+'
    compile 'org.jsoup:jsoup:+'
    compile 'org.opensaml:opensaml-core:+'
    compile 'org.opensaml:opensaml-saml-api:+'
    compile 'org.opensaml:opensaml-saml-impl:+'
    compile 'org.opensaml:opensaml-xmlsec-impl:+'
    compile 'org.json:json:+'
    compile 'org.apache.logging.log4j:log4j-core:+'
    compile 'org.apache.logging.log4j:log4j-api:+'
    compile 'org.ini4j:ini4j:+'
    
}

// Include dependent libraries in archive.
task createJobJar(dependsOn:jar,type:Jar) {
    manifest {
        attributes(
                'Implementation-Title': 'Job ',
                'Implementation-Version': version,
                'Main-Class': "com.aws.sts.outh.AWSFrame",
                'Class-Path': configurations.compile.collect { 'lib/'+it.getName() }.join(' ')
        )
    }
    destinationDir new File("$buildDir")
    into('lib'){
         from configurations.compile
    }
    into(''){
        from "$buildDir/classes/main"
    }
    into(''){
        from "$buildDir/resources/main"
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version,
                   'Main-Class': "com.aws.sts.outh.AWSFrame",
                   'Class-Path': configurations.compile.collect { 'lib/'+it.getName() }.join(' ')
    }
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
